{"version":3,"sources":["components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/Home.js","components/hooks/useHomeFetch.js","components/styles/GlobalStyle.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/styles/StyledActor.js","components/elements/Actor.js","components/Movie.js","components/hooks/useMovieFetch.js","components/NotFound.js","components/App.js","index.js","components/images/no_image.jpg"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","to","src","RMDBLogo","alt","TMDLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","IMAGE_BASE_URL","StyledHeroImage","props","image","HeroImage","title","text","StyledSpinner","Spinner","StyledSearchBar","StyledSearchBarContent","SearchBar","callback","useState","state","setState","timeOut","useRef","name","size","type","placeholder","onChange","event","value","target","clearTimeout","current","setTimeout","StyledMovieThumb","MovieThumb","movieId","clickable","StyledGrid","StyledGridContent","Grid","header","children","StyledLoadMoreBtn","button","LoadMoreBtn","onClick","Home","searchTerm","setSearchTerm","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","console","log","prev","results","heroImage","currentPage","page","totalPages","total_pages","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","movieName","searchEndPoint","popularEndpoint","GlobalStyle","createGlobalStyle","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","length","element","credit_id","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","StyledActor","Actor","actor","profile_path","character","Movie","fetchData","useCallback","creditsEndpoint","creditsResult","crew","filter","member","job","actors","cast","localStorage","useMovieFetch","runtime","NotFound","App","path","default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7be7240c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 10px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin:  auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from 'react'\nimport RMDBLogo from '../images/reactMovie_logo.png';\nimport TMDLogo from '../images/tmdb_logo.svg';\nimport {Link} from '@reach/router';\n\nimport {StyledHeader,StyledRMDBLogo,StyledTMDBLogo} from '../styles/StyledHeader';\n\n//1.learn how to create basic style components\n//2.Learn how to handle props in styled components\n//3.Create a global style with styled components\n\n\n\nexport const Header = () => {\n    return (\n        <StyledHeader>\n            <div className=\"header-content\">\n                <Link to =\"/\">\n                <StyledRMDBLogo src={RMDBLogo} alt=\"rmdb-logo\"/>\n                </Link>\n                <StyledTMDBLogo src={TMDLogo} alt=\"tmdb-logo\"/>\n            </div>\n        </StyledHeader>\n    )\n}\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE,SEARCH_BASE_URL,POPULAR_BASE_URL };\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 2s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin:  auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\n\nimport {StyledHeroImage} from '../styles/StyledHeroImage';\nimport PropTypes from 'prop-types';\n\n\n//the props here are from the component StyledHeroImage billow\n\n\nexport const HeroImage = ({image,title,text}) => {\n    return (\n        <StyledHeroImage image={image}>\n            <div className=\"heroimage-content\">\n            <div className=\"heroimage-text\">\n\n            <h1>{title}</h1>\n            <p>{text}</p>\n            </div>\n            </div>\n        </StyledHeroImage>\n    )\n}\n\nHeroImage.propTypes={\n    image: PropTypes.string,\n    title: PropTypes.string,\n    text: PropTypes.string,\n}\n","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport {StyledSpinner} from '../styles/StyledSpinner';\n\n\n\n\n\nexport const Spinner = () => {\n    return (\n        <StyledSpinner/>\n         \n    )\n}\n","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React,{useState,useRef} from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nimport {StyledSearchBar,StyledSearchBarContent} from '../styles/StyledSearchBar';\nimport PropTypes from 'prop-types';\n\nexport const SearchBar = ({callback}) => {\n\n    const [state,setState] = useState('');\n    const timeOut = useRef(null);\n\n    \n    const doSearch = event =>{\n        \n        const {value} = event.target;\n        \n        clearTimeout(timeOut.current);\n        setState(value);\n\n        timeOut.current = setTimeout(() =>{\n            callback(value);\n        },500)\n        \n    }\n\n    return (\n        <div>\n            <StyledSearchBar>\n                <StyledSearchBarContent>\n                <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\"/>\n                <input type=\"text\" placeholder=\"Search Movie...\" onChange={doSearch} value={state}/>\n                </StyledSearchBarContent>\n            </StyledSearchBar>\n        </div>\n    )\n}\n\nSearchBar.propTypes ={\n    callback: PropTypes.func\n}\n","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    /* max-height: 350px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    /* @media screen and (max-width: 1024px) {\n      height: 300px;\n    }\n\n    @media screen and (max-width: 768px) {\n      height: 350px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-height: 300px;\n    }\n\n    @media screen and (max-width: 375px) {\n      max-height: 450px;\n    } */\n\n    .clickable {\n      cursor: pointer;\n    }\n  }\n`;\n","import React from 'react';\nimport {StyledMovieThumb} from '../styles/StyledMovieThumb';\nimport {Link} from '@reach/router';\nimport PropTypes from 'prop-types';\n\nexport const MovieThumb = ({image,movieId,clickable}) => {\n    return (\n        <StyledMovieThumb>\n           {clickable ? (\n               <Link to={`/${movieId}`}>\n               <img className=\"clickable\" src={image} alt=\"moviethumb\"/>\n               </Link>\n           ) :(\n               <img src={image} alt=\"moviethumb\"/>\n           )}\n        </StyledMovieThumb>\n    )\n}\n\nMovieThumb.propTypes ={\n    image: PropTypes.string,\n    movieId: PropTypes.number,\n    clickable: PropTypes.bool,\n}\n","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  .grid-element {\n    animation: animateGrid 0.5s;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react';\nimport {StyledGrid,StyledGridContent} from '../styles/StyledGrid';\nimport PropTypes from 'prop-types';\n\n//children are all the props in the Grid\nexport const Grid = ({header,children}) => {\n    return (\n        <StyledGrid>\n            <h1>{header}</h1>\n            <StyledGridContent>{children}</StyledGridContent>\n        </StyledGrid>\n    )\n}\n\nGrid.propTypes ={\n    header: PropTypes.string,\n    \n}\n","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\nimport {StyledLoadMoreBtn} from '../styles/StyledLoadMoreBtn';\nimport PropTypes from 'prop-types';\n\nexport const LoadMoreBtn = ({text,callback}) => {\n    return (\n        <StyledLoadMoreBtn type=\"button\" onClick={callback}>\n            {text}\n        </StyledLoadMoreBtn>\n    )\n}\n\nLoadMoreBtn.propTypes ={\n    text: PropTypes.string,\n    callback:PropTypes.func,\n}\n","import React, { useState} from 'react';\nimport {POSTER_SIZE,BACKDROP_SIZE, IMAGE_BASE_URL,POPULAR_BASE_URL,SEARCH_BASE_URL} from '../config';\n\n\n//import components\nimport {HeroImage} from './elements/HeroImage';\nimport {Spinner} from './elements/Spinner';\nimport {SearchBar} from './elements/SearchBar';\nimport {MovieThumb} from './elements/MovieThumb';\nimport {Grid} from './elements/Grid';\n\nimport {LoadMoreBtn} from './elements/LoadMoreBtn';\n\n\n//custom hook\n\nimport {useHomeFetch} from './hooks/useHomeFetch';\n\nimport NoImage from './images/no_image.jpg';\n\n\n\nexport const Home = () => {\n\n    const [searchTerm,setSearchTerm] = useState('');\n    \n    //CUSTOM HOOK\n  const  [{state,loading,error}, fetchMovies] = useHomeFetch(searchTerm);//sending the serachTerm to the useHomeFetch hook\n\n  \n\n  const searchMovies = search =>{\n      //CHECKING IF THE USER ENTERED A STRING INPUT\n  const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\n\n  setSearchTerm(search);\n  fetchMovies(endpoint);\n\n  }\n\n  const loadMoreMovies = () =>{\n\n      const searchEndPoint = `${SEARCH_BASE_URL}${searchTerm}&page=${state.currentPage + 1}`;\n      const popularEndpoint = `${POPULAR_BASE_URL}&page=${state.currentPage + 1}`;\n\n// checking if  searchTerm if empty if yes load popular movies  and clicking the load more movies will load the next page\n      const endpoint = searchTerm ? searchEndPoint : popularEndpoint;\n\n      fetchMovies(endpoint);\n\n  }\n\n  console.log(state);\n\n//in the first render the state will be empty no DATA so it wont recognize any property\n  if(error) return <div>Something went wrong...</div>\n  if(!state.movies[0]) return <Spinner/>\n  \n    \n\n    return(\n        <>\n        { !searchTerm &&(\n        \n            <HeroImage \n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.heroImage.backdrop_path}`}\n            title={state.heroImage.original_title}\n            text={state.heroImage.overview}/>\n        )\n\n        }\n            <SearchBar callback={searchMovies}/>\n\n            <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n             {state.movies.map(movie => (\n                 <MovieThumb\n                 key={movie.id}\n                 clickable ={movie.poster_path ? true : false}\n                 image={movie.poster_path ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                 : NoImage }\n                 movieId={movie.id}\n                 movieName={movie.original_title}\n                 />\n             ))}\n            </Grid>\n            {/* if loading is true return Spinner */}\n            {loading  &&  <Spinner/>}\n            {/* Button will not show at the last page */}\n            {state.currentPage < state.totalPages  && !loading &&(\n                <LoadMoreBtn text={\"Load More\"} callback={loadMoreMovies}/>\n            )}\n            \n            \n        </>\n    )\n\n}\n\n","import {useState,useEffect} from 'react';\nimport {POPULAR_BASE_URL} from '../../config';\n\n\nexport const useHomeFetch = searchTerm =>{\n\n    const [state,setState] = useState({movies: []});\n    const [loading,setLoading] = useState(false);\n    const [error,setError] = useState(false);\n\n    \n\n    //FETCHING URL DATA\n    const fetchMovies = async endpoint =>{\n\n    setError(false);\n    setLoading(true);\n\n    //at the start the endpoint will not have any 'page' so it is false\n    const isLoadMore = endpoint.search('page');\n    \n    \n\n    try{\n        //fetching the data and waiting until it is done fetching\n        const result = await (await fetch(endpoint)).json();\n        console.log(result,'result');\n        \n        \n        setState(prev =>({\n         ...prev,\n         movies: isLoadMore !== -1 ? [...prev.movies,...result.results] : [...result.results],//prev movies is the movies already loaded\n         heroImage: prev.heroImage || result.results[7], //this means if prev.heoImage is false than go to the next expression result.results[0]\n         currentPage: result.page,\n         totalPages: result.total_pages\n        }));\n\n    }catch (error){\n\n    setError(true);\n    console.log(error);\n    \n    }\n\n    setLoading(false)\n    }\n\n    useEffect(() =>{\n        if(sessionStorage.homeState){\n            console.log(\"Grabbing from sessionStorage\");\n            \n            setState(JSON.parse(sessionStorage.homeState))//parsing back into an Object\n            setLoading(false)\n        }else{\n            console.log('Grabbing from API');\n            \n            fetchMovies(POPULAR_BASE_URL);\n        }\n        \n    },[])\n\n    useEffect(() =>{\n        if(!searchTerm){\n            console.log('writing to session storage');\n            \n        sessionStorage.setItem('homeState', JSON.stringify(state))//parsing the state with the name of homeState to a json Object\n        }\n    },[searchTerm,state])\n\n\n    return [{state,loading,error}, fetchMovies];\n}","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport {Link} from '@reach/router';\n\nimport {StyledNavigation} from '../styles/StyledNavigation';\nimport PropTypes from 'prop-types';\n\nexport const Navigation = ({movie}) => {\n    return (\n        <StyledNavigation>\n            <div className=\"navigation-content\">\n             <Link to=\"/\">\n             <p>Home</p>\n             </Link>\n             <p>|</p>\n             <p>{movie}</p>\n\n            </div>\n        </StyledNavigation>\n    )\n}\n\nNavigation.propTypes ={\n    movie: PropTypes.string,\n}\n","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport NoImage from '../images/no_image.jpg';\nimport {IMAGE_BASE_URL, POSTER_SIZE} from '../../config';\n\nimport {MovieThumb} from './MovieThumb';\nimport{StyledMovieInfo} from '../styles/StyledMovieInfo';\nimport PropTypes from 'prop-types';\n\n\nexport const MovieInfo = ({movie}) => {\n    return (\n        <StyledMovieInfo backdrop={movie.backdrop_path}>\n            <div className=\"movieinfo-content\">\n                <div className=\"movieinfo-thumb\">\n                    <MovieThumb image={\n                        movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage\n                    }\n                    clickable={false}\n                    />\n                </div>\n                <div className=\"movieinfo-text\">\n                    <h1>{movie.title}</h1>\n                    <h3>PLOT</h3>\n                    <p>{movie.overview}</p>\n                \n                <div className=\"rating-director\">\n                    <div>\n                        <h3>IMDB RATING</h3>\n                        <div className=\"score\">{movie.vote_average}</div>\n                    </div>\n                    <div className=\"director\">\n                        <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n                        {movie.directors.map(element =>(\n                            <p key={element.credit_id}>{element.name}</p>\n                        ))}\n                    </div>\n                </div>\n                </div>\n            </div>\n        </StyledMovieInfo>\n    )\n}\n\nMovieInfo.propTypes ={\n    movie:PropTypes.object,\n    directors: PropTypes.array,\n    \n}\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  \n  \n  const mins = time % 60;\n \n  \n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport {calcTime,convertMoney} from '../../helpers';\nimport {StyledMovieInfoBar} from '../styles/StyledMovieInfoBar';\nimport PropTypes from 'prop-types';\n\nexport const MovieInfoBar = ({time,budget,revenue}) => {\n    return (\n        <StyledMovieInfoBar>\n            <div className=\"movieinfobar-content\">\n                <div className=\"movieinfobar-content-col\">\n                    <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\"/>\n                    <span className=\"movieinfobar-info\">\n                        Running Time: {calcTime(time)}\n                    </span>\n                </div>\n\n                <div className=\"movieinfobar-content-col\">\n                    <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\"/>\n                    <span className=\"movieinfobar-info\">\n                        Budget: {convertMoney(budget)}\n                    </span>\n                </div>\n\n                <div className=\"movieinfobar-content-col\">\n                    <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\"/>\n                    <span className=\"movieinfobar-info\">\n                        Revenue: {convertMoney(revenue)}\n                    </span>\n                </div>\n            </div>\n        </StyledMovieInfoBar>\n    )\n}\n\nMovieInfoBar.propTypes = {\n    time: PropTypes.number,\n    budget: PropTypes.number,\n    revenue: PropTypes.number,\n}\n","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","import React from 'react';\nimport NoImage from '../images/no_image.jpg';\nimport {IMAGE_BASE_URL,POSTER_SIZE} from '../../config';\nimport {StyledActor} from '../styles/StyledActor';\nimport PropTypes from 'prop-types';\n\nexport const Actor = ({actor}) => {\n    return (\n        <StyledActor>\n        <img src={actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`: NoImage} alt=\"actorthumb\"/>\n        <span className=\"actor-name\">{actor.name}</span>\n        <span className=\"actor-character\">{actor.character}</span>\n        </StyledActor>\n    )\n}\n\nActor.propTypes ={\n    actor: PropTypes.object,\n}\n","import React from 'react';\nimport {useMovieFetch} from './hooks/useMovieFetch';\n\n\n//components\nimport {Navigation} from './elements/Navigation';\nimport {MovieInfo} from './elements/MovieInfo';\nimport {MovieInfoBar} from './elements/MovieInfoBar';\nimport {Actor} from './elements/Actor';\nimport {Grid} from './elements/Grid';\nimport {Spinner} from './elements/Spinner';\n\nexport const Movie = ({movieId}) => {\n\n    const[state,loading,error] = useMovieFetch(movieId);\n    \n    \nif(error) return <div>Something went wrong...</div>;\nif(loading) return <Spinner/>;\n\n    return (\n\n        <>\n\n           <Navigation movie={state.original_title}/>\n           <MovieInfo movie={state}/>\n           <MovieInfoBar time={state.runtime} budget={state.budget} revenue={state.revenue}/>\n           <Grid header=\"Actors\">\n               {state.actors.map( actor =>(\n                   <Actor key={actor.credit_id} actor={actor}/>\n               ))}\n               \n           </Grid>\n           \n           \n           \n\n           \n        </>\n    )\n}\n","import {useCallback,useState,useEffect} from 'react';\nimport {API_KEY,API_URL} from '../../config';\n\n\nexport const useMovieFetch = movieId =>{\n\n    const [state,setState] = useState({});\n    const [ loading,setLoading] = useState(true);\n    const [error,setError] = useState(false);\n\n\n    //this function will change only when the moviId changed\n    const fetchData = useCallback(async () =>{\n\n        setError(false);\n        setLoading(true);\n\n        try{\n\n         const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n         const result = await(await fetch(endpoint)).json();\n\n         \n\n         const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n         const creditsResult = await(await fetch(creditsEndpoint)).json();\n\n       \n\n         const directors = creditsResult.crew.filter(\n             member => member.job === 'Director'\n         );\n\n         setState({\n             ...result,\n             actors: creditsResult.cast,\n             directors: directors\n\n         })\n\n         \n         \n        }catch(error){\n            setError(true);\n        }\n        setLoading(false);\n    \n    },[movieId])\n\n    useEffect(() =>{\n        if(localStorage[movieId]){\n            console.log('Grabbing from local storage');\n            \n            setState(JSON.parse(localStorage[movieId]));\n            setLoading(false);\n        }else{\n            console.log(\"Grabbing from API\");\n            \n            fetchData();\n        }\n        \n    },[fetchData])\n    \n//SAVING TO THE LOCAL STORAGE\n    useEffect(() =>{\n        localStorage.setItem(movieId,JSON.stringify(state));\n    },[movieId,state])\n\n    return [state,loading,error]\n}","import React from 'react'\n\nexport const NotFound = () => {\n    return (\n        <div>\n            OOPPS....NOTTHING FOUND HERE\n        </div>\n    )\n}\n","import React from 'react';\nimport {Header} from './elements/Header';\nimport {Home} from '../components/Home';\nimport {GlobalStyle} from './styles/GlobalStyle';\nimport {Router} from '@reach/router';\nimport {Movie} from './Movie';\nimport {NotFound} from './NotFound';\n\n\n\nconst App = () => (\n<>\n<Header/>\n\n<Router>\n<Home path=\"/\"/>\n<Movie path =\"/:movieId\"/>\n<NotFound default/>\n</Router>\n\n<GlobalStyle/>\n</>\n\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}